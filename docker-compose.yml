services:
  wml_db:
    image: postgres:17
    container_name: wml_db
    command: ['-p ${BACKEND__DB__PORT:-1212}']
    environment:
      POSTGRES_DB: ${BACKEND__DB__NAME:-wml}
      POSTGRES_USER: ${BACKEND__DB__USER:-wml}
      POSTGRES_PASSWORD: ${BACKEND__DB__PASSWORD:?database password required}
    #   PGDATA: /var/lib/postgresql/data/pgdata
    # volumes:
    #   - ./temp/postgres:/var/lib/postgresql/data
    # ports:
    #   - 8485:${BACKEND__DB__PORT:-1212}
    networks:
      wml-net:
    restart: unless-stopped

  wml_backend_api:
    build:
      context: ./backend
    container_name: wml_backend_api
    command: ['/app/api/docker/dev.app.sh']
    environment:
      BACKEND__DB__HOST: wml_db
      BACKEND__DB__PORT: ${BACKEND__DB__PORT:-1212}
      BACKEND__DB__USER: ${BACKEND__DB__USER:-wml}
      BACKEND__DB__PASSWORD: ${BACKEND__DB__PASSWORD:?database password required}
      BACKEND__DB__NAME: ${BACKEND__DB__NAME:-wml}
      BACKEND__ORIGINS: ${BACKEND__ORIGINS:-["http://172.24.0.4:3000"]}
    volumes:
      - ./logs:/app/api/logs
    ports:
      - 8484:8000
    networks:
      wml-net:
    depends_on:
      - wml_db
    restart: unless-stopped

  wml_frontend:
    build:
      context: ./frontend
      target: prod
    container_name: wml_frontend
    environment:
      NUXT_PUBLIC_API_BASE: ${NUXT_CSR_API_BASE:?required an external address (CSR) for the frontend}
      NUXT_SSR_API_BASE: wml_backend_api:8000
    ports:
      - 3434:3000
    networks:
      wml-net:
    depends_on:
      - wml_db
      - wml_backend_api
    restart: unless-stopped

networks:
  wml-net:
    name: wml-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16
          gateway: 172.24.0.1
